version: '3.5'

services:

  db:
    image: ms4b/1c-postgres:${POSTGRES_VER}
    container_name: 1c-postgres
    hostname: 1c-postgres
    restart: always
    volumes:
    - /var/volumes/1c-postgres:/data:rw
    env_file:
      - .env_postgres
      - .env_pwd_pg

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    hostname: pgadmin
    restart: always
    ports:
      - "${PGADMIN_PORT}:80"
    volumes:
      - /var/volumes/pgadmin:/var/lib/pgadmin:rw
    env_file:
      - .env_pwd_pgadmin
    links:
    - "db:1c-postgres"
    depends_on:
    - db

  1c:
    image: ms4b/1c-server:${APP_SERVER_VER}
    container_name: 1c-server
    hostname: "${HOSTNAME}"
    restart: always
    ports:
    - "${AGENT_PORT}:1540"
    - "${CLUSTER_PORT}:1541"
    - "${APPS_PORT}:1560-1591"
    #- "${ZABBIX_1C_PORT}:10070"
    devices:
      - /dev/bus/usb:/dev/bus/usb
      - /dev/usb-vhci:/dev/usb-vhci
      - /dev/aks/hasp/3-1:/dev/aks/hasp/3-1
      - /dev/aks/hasp/3-2:/dev/aks/hasp/3-2
    volumes:
      - /var/volumes/1c-server/home:/home/usr1cv8:rw
      - /var/volumes/1c-server/logs:/var/log/1c:rw
      - /var/volumes/1c-server/zabbix:/var/log/zabbix:rw
    env_file:
      - .env_1c-server
      - .env_pwd_1c
      - .env_pwd_pg
    links:
    - "db:1c-postgres"
    depends_on:
    - db

  apache:
    image: ms4b/1c-apache:${APP_SERVER_VER}
    container_name: 1c-apache
    hostname: 1c-apache
    restart: always
    volumes:
      - /var/volumes/apache/conf:/usr/local/apache2/conf/extra:ro
      - /var/volumes/apache/htdocs:/usr/local/apache2/htdocs:rw
    links:
    - "1c:1c-server"
    depends_on:
    - 1c

  portainer:
    image: portainer/portainer
    container_name: portainer
    hostname: portainer
    restart: always
    ports:
    - "${PORTAINER_PORT}:9000"
    volumes:
    - /var/run/docker.sock:/var/run/docker.sock
    - /var/volumes/portainer:/data:rw

  nginx:
    image: ms4b/nginx:${NGINX_VER}
    container_name: nginx
    hostname: nginx
    restart: always
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
    volumes:
    - /var/volumes/certbot/conf:/etc/letsencrypt:ro
    - /var/volumes/certbot/www:/var/www/certbot:ro
    - /var/volumes/nginx/logs:/var/log/nginx:rw
    ports:
    - "${NGINX_HTTP_PORT}:80"
    - "${NGINX_HTTPS_PORT}:443"
    links:
    - "apache:1c-apache"
    depends_on:
    - apache

  certbot:
    image: certbot/certbot
    container_name: certbot
    hostname: certbot
    restart: always
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    volumes:
    - /var/volumes/certbot/conf:/etc/letsencrypt:rw
    - /var/volumes/certbot/www:/var/www/certbot:rw
    - /var/volumes/certbot/logs:/var/log/letsencrypt:rw
    depends_on:
    - nginx

  za:
    image: ms4b/zabbix-agent:${ZABBIX_AGENT_VER}
    container_name: za
    hostname: za
    restart: always
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
      - /var/volumes/zabbix:/var/log/zabbix:rw
      #- ./zbx_env/etc/zabbix/zabbix_agentd.d:/etc/zabbix/zabbix_agentd.d:ro
      #- ./zbx_env/var/lib/zabbix/modules:/var/lib/zabbix/modules:ro
      #- ./zbx_env/var/lib/zabbix/enc:/var/lib/zabbix/enc:ro
      #- ./zbx_env/var/lib/zabbix/ssh_keys:/var/lib/zabbix/ssh_keys:ro
    ports:
      - "${ZABBIX_PORT}:10070"
    user: root
    privileged: true
    pid: "host"

